[{"D:\\Study Folder\\Projects\\React\\project\\src\\index.js":"1","D:\\Study Folder\\Projects\\React\\project\\src\\App.js":"2","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx":"3","D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx":"4","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js":"5","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AllSearch\\AutoCompleteItem.jsx":"6","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AllSearch\\index.js":"7"},{"size":267,"mtime":1608212373979,"results":"8","hashOfConfig":"9"},{"size":891,"mtime":1608217437292,"results":"10","hashOfConfig":"9"},{"size":2407,"mtime":1608129646481,"results":"11","hashOfConfig":"9"},{"size":2426,"mtime":1608217230759,"results":"12","hashOfConfig":"9"},{"size":1309,"mtime":1608220085804,"results":"13","hashOfConfig":"9"},{"size":1303,"mtime":1608224163801,"results":"14","hashOfConfig":"9"},{"size":3865,"mtime":1608224268845,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xyv8xd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"D:\\Study Folder\\Projects\\React\\project\\src\\index.js",[],["34","35"],"D:\\Study Folder\\Projects\\React\\project\\src\\App.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx",[],["36","37"],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\AllSearch\\AutoCompleteItem.jsx",["38","39"],"import React from 'react';\r\n\r\nconst AutoCompleteItem = ({\r\n    project_name,\r\n    assigned_to,\r\n    task_number,\r\n    status,\r\n    onSelectItem,\r\n    isHighlighted,\r\n}) => {\r\n    return (\r\n        <li\r\n            className={`list-group-item ${\r\n                isHighlighted ? 'active highlighted' : ''\r\n            }`}\r\n            onClick={onSelectItem}\r\n        >\r\n            <div className='row'>\r\n                <div className='col text-left'>\r\n                    <p className='mb-0 font-weight-bold line-height-1'>\r\n                        {project_name}\r\n                    </p>\r\n                    <p className='mb-0 badge badge-primary'>\r\n                        {assigned_to}\r\n                    </p>\r\n                    <p\r\n                        className={\r\n                            status == 'Pending'\r\n                                ? 'mb-0 ml-2 badge badge-danger'\r\n                                : status == 'Completed'\r\n                                ? 'mb-0 ml-2 badge badge-success'\r\n                                : 'mb-0 ml-2 badge badge-warning'\r\n                        }\r\n                    >\r\n                        {status}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteItem;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AllSearch\\index.js",["40","41"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport AutoCompleteItem from './AutoCompleteItem';\r\n\r\nconst AutoComplete = ({ data, onSelect }) => {\r\n    const [isVisbile, setVisiblity] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [cursor, setCursor] = useState(-1);\r\n\r\n    const searchContainer = useRef(null);\r\n    const searchResultRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const scrollIntoView = (position) => {\r\n        searchResultRef.current.parentNode.scrollTo({\r\n            top: position,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cursor < 0 || cursor > suggestions.length || !searchResultRef) {\r\n            return () => {};\r\n        }\r\n\r\n        let listItems = Array.from(searchResultRef.current.children);\r\n        listItems[cursor] && scrollIntoView(listItems[cursor].offsetTop);\r\n    }, [cursor]);\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!search) return data;\r\n\r\n        setCursor(-1);\r\n        scrollIntoView(0);\r\n\r\n        return data.filter((item) =>\r\n            item.status.toLowerCase().includes(search.toLowerCase()) || item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }, [data, search]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            searchContainer.current &&\r\n            !searchContainer.current.contains(event.target)\r\n        ) {\r\n            hideSuggestion();\r\n        }\r\n    };\r\n\r\n    const showSuggestion = () => setVisiblity(true);\r\n\r\n    const hideSuggestion = () => setVisiblity(false);\r\n\r\n    const keyboardNavigation = (e) => {\r\n        if (e.key === 'ArrowDown') {\r\n            isVisbile\r\n                ? setCursor((c) => (c < suggestions.length - 1 ? c + 1 : c))\r\n                : showSuggestion();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            setCursor((c) => (c > 0 ? c - 1 : 0));\r\n        }\r\n\r\n        if (e.key === 'Escape') {\r\n            hideSuggestion();\r\n        }\r\n\r\n        if (e.key === 'Enter' && cursor > 0) {\r\n            setSearch(suggestions[cursor].status);\r\n            hideSuggestion();\r\n            onSelect(suggestions[cursor]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{ height: '100%', marginTop: '30px', marginBottom: '50px' }}\r\n            ref={searchContainer}\r\n        >\r\n            <input\r\n                type='text'\r\n                name='search'\r\n                placeholder='Search tasks, @Users...'\r\n                className='search-bar'\r\n                autoComplete='off'\r\n                value={search}\r\n                onClick={showSuggestion}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onKeyDown={(e) => keyboardNavigation(e)}\r\n            />\r\n\r\n            <div\r\n                className={`search-result ${\r\n                    isVisbile ? 'visible' : 'invisible'\r\n                }`}\r\n            >\r\n                <ul className='list-group' ref={searchResultRef}>\r\n                    {suggestions.map((item, idx) => (\r\n                        <AutoCompleteItem\r\n                            key={idx}\r\n                            onSelectItem={() => {\r\n                                hideSuggestion();\r\n                                setSearch(item.project_name);\r\n                                onSelect(item);\r\n                            }}\r\n                            isHighlighted={cursor === idx ? true : false}\r\n                            {...item}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoComplete;\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":28,"column":36,"nodeType":"50","messageId":"51","endLine":28,"endColumn":38},{"ruleId":"48","severity":1,"message":"49","line":30,"column":42,"nodeType":"50","messageId":"51","endLine":30,"endColumn":44},{"ruleId":"52","severity":1,"message":"53","line":18,"column":8,"nodeType":"54","endLine":18,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":34,"column":8,"nodeType":"54","endLine":34,"endColumn":16,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'suggestions.length'. Either include it or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [handleClickOutside]",{"range":"66","text":"67"},"Update the dependencies array to be: [cursor, suggestions.length]",{"range":"68","text":"69"},[621,623],"[handleClickOutside]",[1109,1117],"[cursor, suggestions.length]"]