[{"D:\\Study Folder\\Projects\\React\\project\\src\\index.js":"1","D:\\Study Folder\\Projects\\React\\project\\src\\App.js":"2","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx":"3","D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx":"4","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js":"5","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js":"6","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx":"7"},{"size":267,"mtime":1608212373979,"results":"8","hashOfConfig":"9"},{"size":813,"mtime":1608351335704,"results":"10","hashOfConfig":"9"},{"size":3090,"mtime":1608370079562,"results":"11","hashOfConfig":"9"},{"size":2603,"mtime":1608267664669,"results":"12","hashOfConfig":"9"},{"size":782,"mtime":1608268860726,"results":"13","hashOfConfig":"9"},{"size":3900,"mtime":1608274182094,"results":"14","hashOfConfig":"9"},{"size":1464,"mtime":1608370044531,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xyv8xd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Study Folder\\Projects\\React\\project\\src\\index.js",[],["32","33"],"D:\\Study Folder\\Projects\\React\\project\\src\\App.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js",["34","35"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport AutoCompleteItem from './AutoCompleteItem';\r\n\r\nconst AutoComplete = ({ data, onSelect }) => {\r\n    const [isVisbile, setVisiblity] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [cursor, setCursor] = useState(-1);\r\n\r\n    const searchContainer = useRef(null);\r\n    const searchResultRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const scrollIntoView = (position) => {\r\n        searchResultRef.current.parentNode.scrollTo({\r\n            top: position,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cursor < 0 || cursor > suggestions.length || !searchResultRef) {\r\n            return () => {};\r\n        }\r\n\r\n        let listItems = Array.from(searchResultRef.current.children);\r\n        listItems[cursor] && scrollIntoView(listItems[cursor].offsetTop);\r\n    }, [cursor]);\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!search) return data;\r\n\r\n        setCursor(-1);\r\n        scrollIntoView(0);\r\n\r\n        return data.filter(\r\n            (item) =>\r\n                item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }, [data, search]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            searchContainer.current &&\r\n            !searchContainer.current.contains(event.target)\r\n        ) {\r\n            hideSuggestion();\r\n        }\r\n    };\r\n\r\n    const showSuggestion = () => setVisiblity(true);\r\n\r\n    const hideSuggestion = () => setVisiblity(false);\r\n\r\n    const keyboardNavigation = (e) => {\r\n        if (e.key === 'ArrowDown') {\r\n            isVisbile\r\n                ? setCursor((c) => (c < suggestions.length - 1 ? c + 1 : c))\r\n                : showSuggestion();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            setCursor((c) => (c > 0 ? c - 1 : 0));\r\n        }\r\n\r\n        if (e.key === 'Escape') {\r\n            hideSuggestion();\r\n        }\r\n\r\n        if (e.key === 'Enter' && cursor > 0) {\r\n            setSearch(suggestions[cursor].status);\r\n            hideSuggestion();\r\n            onSelect(suggestions[cursor]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{ height: '100%', marginTop: '30px', marginBottom: '50px' }}\r\n            ref={searchContainer}\r\n        >\r\n            <input\r\n                type='text'\r\n                name='search'\r\n                placeholder='Search tasks, @Users...'\r\n                className='search-bar'\r\n                autoComplete='off'\r\n                value={search}\r\n                onClick={showSuggestion}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onKeyDown={(e) => keyboardNavigation(e)}\r\n            />\r\n\r\n            <div\r\n                className={`search-result ${\r\n                    isVisbile ? 'visible' : 'invisible'\r\n                }`}\r\n            >\r\n                <ul className='list-group' ref={searchResultRef}>\r\n                    {suggestions.map((item, idx) => (\r\n                        <AutoCompleteItem\r\n                            key={idx}\r\n                            onSelectItem={() => {\r\n                                hideSuggestion();\r\n                                setSearch(item.project_name);\r\n                                onSelect(item);\r\n                            }}\r\n                            isHighlighted={cursor === idx ? true : false}\r\n                            {...item}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoComplete;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":18,"column":8,"nodeType":"42","endLine":18,"endColumn":10,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":34,"column":8,"nodeType":"42","endLine":34,"endColumn":16,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'suggestions.length'. Either include it or remove the dependency array.",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [handleClickOutside]",{"range":"54","text":"55"},"Update the dependencies array to be: [cursor, suggestions.length]",{"range":"56","text":"57"},[621,623],"[handleClickOutside]",[1109,1117],"[cursor, suggestions.length]"]