[{"D:\\Study Folder\\Projects\\React\\project\\src\\index.js":"1","D:\\Study Folder\\Projects\\React\\project\\src\\App.js":"2","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx":"3","D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx":"4","D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js":"5","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js":"6","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx":"7"},{"size":267,"mtime":1608212373979,"results":"8","hashOfConfig":"9"},{"size":827,"mtime":1608270370317,"results":"10","hashOfConfig":"9"},{"size":2625,"mtime":1608268578885,"results":"11","hashOfConfig":"9"},{"size":2603,"mtime":1608267664669,"results":"12","hashOfConfig":"9"},{"size":782,"mtime":1608268860726,"results":"13","hashOfConfig":"9"},{"size":3865,"mtime":1608224268845,"results":"14","hashOfConfig":"9"},{"size":1462,"mtime":1608225546762,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xyv8xd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"D:\\Study Folder\\Projects\\React\\project\\src\\index.js",[],["35","36"],"D:\\Study Folder\\Projects\\React\\project\\src\\App.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchResults\\SearchResults.jsx",["37"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CompanyData from '../../assets/data.json';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {    \r\n        marginLeft: 30,\r\n        marginTop: 100,\r\n        width: 1300,\r\n    },\r\n});\r\n\r\nconst createData = (name, calories, fat, carbs, protein) => {\r\n    return { name, calories, fat, carbs, protein };\r\n};\r\n\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst SearchResults = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper} className={classes.paper}>\r\n            <Table\r\n                className={classes.table}\r\n                aria-label='simple table'\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Results</TableCell>\r\n                        <TableCell align='right'>Calories</TableCell>\r\n                        <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n                        <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n                        <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell component='th' scope='row'>\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell align='right'>{row.calories}</TableCell>\r\n                            <TableCell align='right'>{row.fat}</TableCell>\r\n                            <TableCell align='right'>{row.carbs}</TableCell>\r\n                            <TableCell align='right'>{row.protein}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\CompanyList\\CompanyList.jsx",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\AutoComplete\\index.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js",["38","39"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport AutoCompleteItem from './AutoCompleteItem';\r\n\r\nconst AutoComplete = ({ data, onSelect }) => {\r\n    const [isVisbile, setVisiblity] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [cursor, setCursor] = useState(-1);\r\n\r\n    const searchContainer = useRef(null);\r\n    const searchResultRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const scrollIntoView = (position) => {\r\n        searchResultRef.current.parentNode.scrollTo({\r\n            top: position,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cursor < 0 || cursor > suggestions.length || !searchResultRef) {\r\n            return () => {};\r\n        }\r\n\r\n        let listItems = Array.from(searchResultRef.current.children);\r\n        listItems[cursor] && scrollIntoView(listItems[cursor].offsetTop);\r\n    }, [cursor]);\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!search) return data;\r\n\r\n        setCursor(-1);\r\n        scrollIntoView(0);\r\n\r\n        return data.filter((item) =>\r\n            item.status.toLowerCase().includes(search.toLowerCase()) || item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }, [data, search]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            searchContainer.current &&\r\n            !searchContainer.current.contains(event.target)\r\n        ) {\r\n            hideSuggestion();\r\n        }\r\n    };\r\n\r\n    const showSuggestion = () => setVisiblity(true);\r\n\r\n    const hideSuggestion = () => setVisiblity(false);\r\n\r\n    const keyboardNavigation = (e) => {\r\n        if (e.key === 'ArrowDown') {\r\n            isVisbile\r\n                ? setCursor((c) => (c < suggestions.length - 1 ? c + 1 : c))\r\n                : showSuggestion();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            setCursor((c) => (c > 0 ? c - 1 : 0));\r\n        }\r\n\r\n        if (e.key === 'Escape') {\r\n            hideSuggestion();\r\n        }\r\n\r\n        if (e.key === 'Enter' && cursor > 0) {\r\n            setSearch(suggestions[cursor].status);\r\n            hideSuggestion();\r\n            onSelect(suggestions[cursor]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{ height: '100%', marginTop: '30px', marginBottom: '50px' }}\r\n            ref={searchContainer}\r\n        >\r\n            <input\r\n                type='text'\r\n                name='search'\r\n                placeholder='Search tasks, @Users...'\r\n                className='search-bar'\r\n                autoComplete='off'\r\n                value={search}\r\n                onClick={showSuggestion}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onKeyDown={(e) => keyboardNavigation(e)}\r\n            />\r\n\r\n            <div\r\n                className={`search-result ${\r\n                    isVisbile ? 'visible' : 'invisible'\r\n                }`}\r\n            >\r\n                <ul className='list-group' ref={searchResultRef}>\r\n                    {suggestions.map((item, idx) => (\r\n                        <AutoCompleteItem\r\n                            key={idx}\r\n                            onSelectItem={() => {\r\n                                hideSuggestion();\r\n                                setSearch(item.project_name);\r\n                                onSelect(item);\r\n                            }}\r\n                            isHighlighted={cursor === idx ? true : false}\r\n                            {...item}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoComplete;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx",["40","41"],"import React from 'react';\r\n\r\nconst AutoCompleteItem = ({\r\n    project_name,\r\n    assigned_to,\r\n    status,\r\n    onSelectItem,\r\n    isHighlighted,\r\n}) => {\r\n    return (\r\n        <li\r\n            className={`list-group-item ${\r\n                isHighlighted ? 'active highlighted' : ''\r\n            }`}\r\n            onClick={onSelectItem}\r\n        >\r\n            <div className='row'>\r\n                <div className='col text-left'>\r\n                    <p className='mb-0 font-weight-bold line-height-1'>\r\n                        {project_name}\r\n                    </p>\r\n                    <span className='small font-weight-bold'>Assigned to - </span>\r\n                    <p className='mb-0 badge badge-primary'>\r\n                        {assigned_to}\r\n                    </p><span> </span>\r\n                    <span className='small font-weight-bold'>Status - </span>\r\n                    <p\r\n                        className={\r\n                            status == 'Pending'\r\n                                ? 'mb-0 ml-2 badge badge-danger'\r\n                                : status == 'Completed'\r\n                                ? 'mb-0 ml-2 badge badge-success'\r\n                                : 'mb-0 ml-2 badge badge-warning'\r\n                        }\r\n                    >\r\n                        {status}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteItem;\r\n",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":10,"column":8,"nodeType":"50","messageId":"51","endLine":10,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":18,"column":8,"nodeType":"54","endLine":18,"endColumn":10,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":34,"column":8,"nodeType":"54","endLine":34,"endColumn":16,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":29,"column":36,"nodeType":"60","messageId":"61","endLine":29,"endColumn":38},{"ruleId":"58","severity":1,"message":"59","line":31,"column":42,"nodeType":"60","messageId":"61","endLine":31,"endColumn":44},{"ruleId":"44","replacedBy":"62"},{"ruleId":"46","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'CompanyData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has a missing dependency: 'suggestions.length'. Either include it or remove the dependency array.",["67"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [handleClickOutside]",{"range":"72","text":"73"},"Update the dependencies array to be: [cursor, suggestions.length]",{"range":"74","text":"75"},[621,623],"[handleClickOutside]",[1109,1117],"[cursor, suggestions.length]"]