[{"D:\\Study Folder\\Projects\\React\\project\\src\\index.js":"1","D:\\Study Folder\\Projects\\React\\project\\src\\App.js":"2","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js":"3","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx":"4","D:\\Study Folder\\Projects\\React\\project\\src\\components\\Table\\TableList.jsx":"5","D:\\Study Folder\\Projects\\React\\project\\src\\components\\MainComponent\\index.js":"6"},{"size":267,"mtime":1608212373979,"results":"7","hashOfConfig":"8"},{"size":258,"mtime":1608717056840,"results":"9","hashOfConfig":"8"},{"size":10527,"mtime":1608734652702,"results":"10","hashOfConfig":"8"},{"size":1673,"mtime":1608703807003,"results":"11","hashOfConfig":"8"},{"size":4533,"mtime":1609251690459,"results":"12","hashOfConfig":"8"},{"size":3084,"mtime":1608703807008,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xyv8xd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Study Folder\\Projects\\React\\project\\src\\index.js",[],["29","30"],"D:\\Study Folder\\Projects\\React\\project\\src\\App.js",[],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\index.js",["31","32"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport AutoCompleteItem from './AutoCompleteItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport TableList from '../Table/TableList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AutoComplete = ({ data, onSelect }) => {\r\n    const classes = useStyles();\r\n    const [isVisbile, setVisiblity] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [cursor, setCursor] = useState(-1);\r\n    const [tableData, setTableData] = useState([]);\r\n    const [tableTitle, setTableTitle] = useState('All Companies');\r\n\r\n    const searchContainer = useRef(null);\r\n    const searchResultRef = useRef(null);\r\n\r\n    const handleProjects = () => {\r\n        setTableData(\r\n            data.filter(\r\n                (item) =>\r\n                    item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                    item.assigned_to\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n    const handleContractors = () => {\r\n        setTableData(\r\n            data.filter(\r\n                (item) =>\r\n                    item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                    item.assigned_to\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n    const handleResources = () => {\r\n        setTableData(\r\n            data.filter(\r\n                (item) =>\r\n                    item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                    item.assigned_to\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n    const handleViewMore = () => {\r\n        setTableTitle('Search Results');\r\n        hideSuggestion();\r\n        console.log('view more clicked');\r\n        setTableData(\r\n            data.filter(\r\n                (item) =>\r\n                    item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                    item.assigned_to\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const scrollIntoView = (position) => {\r\n        searchResultRef.current.parentNode.scrollTo({\r\n            top: position,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cursor < 0 || cursor > suggestions.length || !searchResultRef) {\r\n            return () => {};\r\n        }\r\n\r\n        let listItems = Array.from(searchResultRef.current.children);\r\n        listItems[cursor] && scrollIntoView(listItems[cursor].offsetTop);\r\n    }, [cursor]);\r\n\r\n    // const handleSearch = e => {\r\n    //     setSearch(e.target.value)\r\n    //     console.log(e.target.value)\r\n    //     setTableData(data.filter(\r\n    //         (item) =>\r\n    //             item.status.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n    //             item.assigned_to.toLowerCase().includes(e.target.value.toLowerCase())\r\n    //     ));\r\n    //     console.log(tableData)\r\n\r\n    // }\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!search) return data;\r\n\r\n        setCursor(-1);\r\n        scrollIntoView(0);\r\n        //    setTableData(data.filter(\r\n        //         (item) =>\r\n        //             item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n        //             item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        //     ));\r\n\r\n        //     console.log(tableData)\r\n        return data.filter(\r\n            (item) =>\r\n                item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }, [data, search]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            searchContainer.current &&\r\n            !searchContainer.current.contains(event.target)\r\n        ) {\r\n            hideSuggestion();\r\n        }\r\n    };\r\n\r\n    const showSuggestion = () => setVisiblity(true);\r\n\r\n    const hideSuggestion = () => setVisiblity(false);\r\n\r\n    const keyboardNavigation = (e) => {\r\n        if (e.key === 'ArrowDown') {\r\n            isVisbile\r\n                ? setCursor((c) => (c < suggestions.length - 1 ? c + 1 : c))\r\n                : showSuggestion();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            setCursor((c) => (c > 0 ? c - 1 : 0));\r\n        }\r\n\r\n        if (e.key === 'Escape') {\r\n            hideSuggestion();\r\n        }\r\n\r\n        if (e.key === 'Enter' && cursor > 0) {\r\n            setSearch(suggestions[cursor].status);\r\n            hideSuggestion();\r\n            onSelect(suggestions[cursor]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ height: '100%', left: '35vw' }} ref={searchContainer}>\r\n                {/* {tableData&&tableData[0].project_name}   */}\r\n                <div>\r\n                    <TextField\r\n                    size=\"small\"\r\n                        label='Search tasks, @Users...'\r\n                        type='text'\r\n                        name='search'\r\n                        id='outlined-basic'\r\n                        variant='outlined'\r\n                        className='search-bar'\r\n                        autoComplete='off'\r\n                        value={search}\r\n                        onClick={showSuggestion}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        onKeyDown={(e) => keyboardNavigation(e)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position='start'>\r\n                                    <SearchIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        style={{ left: '103%', outline: 'none' }}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className={`search-result ${\r\n                        isVisbile ? 'visible' : 'invisible'\r\n                    }`}\r\n                    style={{ marginLeft: '35vw' }}\r\n                >\r\n                    <br />\r\n                    <div className='ml-4'>\r\n                        <Button\r\n                            className='ml-1'\r\n                            type='submit'\r\n                            aria-controls='customized-menu'\r\n                            aria-haspopup='true'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleProjects}\r\n                            style={{ outline: 'none' }}\r\n                        >\r\n                            Projects\r\n                        </Button>\r\n\r\n                        <Button\r\n                            className='ml-1'\r\n                            type='submit'\r\n                            aria-controls='customized-menu'\r\n                            aria-haspopup='true'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleContractors}\r\n                            style={{ outline: 'none' }}\r\n                        >\r\n                            Contractors\r\n                        </Button>\r\n\r\n                        <Button\r\n                            className='ml-1'\r\n                            type='submit'\r\n                            aria-controls='customized-menu'\r\n                            aria-haspopup='true'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleResources}\r\n                            style={{ outline: 'none' }}\r\n                        >\r\n                            Resources\r\n                        </Button>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                    <ul\r\n                        className='list-group'\r\n                        ref={searchResultRef}\r\n                        style={{ outline: 'none' }}\r\n                    >\r\n                        {suggestions.slice(0, 4).map((item, idx) => (\r\n                            <AutoCompleteItem\r\n                                key={idx}\r\n                                onSelectItem={() => {\r\n                                    hideSuggestion();\r\n                                    setSearch(item.project_name);\r\n                                    setTableData([item]);\r\n                                }}\r\n                                isHighlighted={cursor === idx ? true : false}\r\n                                {...item}\r\n                                style={{ backgroundColor: 'none' }}\r\n                            />\r\n                        ))}\r\n\r\n                        <Button\r\n                            className='btn'\r\n                            size='small'\r\n                            style={{\r\n                                color: '#0000FF',\r\n                                backgroundColor: 'white',\r\n                                outline: 'none',\r\n                            }}\r\n                            onClick={handleViewMore}\r\n                        >\r\n                            View More{' '}\r\n                            <ArrowForwardIcon\r\n                                fontSize='small'\r\n                                className={classes.extendedIcon}\r\n                            />\r\n                        </Button>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <TableList data={tableData} title={tableTitle} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AutoComplete;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\SearchBar\\AutoCompleteItem.jsx",["33"],"import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst AutoCompleteItem = ({\r\n    project_name,\r\n    assigned_to,\r\n    status,\r\n    onSelectItem,\r\n    isHighlighted,\r\n}) => {\r\n    return (\r\n        <List\r\n            className=\"list-group\" style={{backgroundColor: 'white'}}\r\n            onClick={onSelectItem}\r\n        >\r\n            <ListItem>\r\n            <div className='row m-0 p-0 '>\r\n                <div className='col text-left'>\r\n                    <p className='mb-0 font-weight-bold line-height-1'>\r\n                        {project_name}\r\n                    </p>\r\n                    <span className='small font-weight-bold'>\r\n                        Assigned to -{' '}\r\n                    </span>\r\n                    <p className='mb-0 badge badge-primary'>{assigned_to}</p>\r\n                    <span> </span>\r\n                    <span className='small font-weight-bold'>Status - </span>\r\n                    <p\r\n                        className={\r\n                            status === 'Pending'\r\n                                ? 'mb-0 ml-2 badge badge-danger'\r\n                                : status === 'Completed'\r\n                                ? 'mb-0 ml-2 badge badge-success'\r\n                                : 'mb-0 ml-2 badge badge-warning'\r\n                        }\r\n                    >\r\n                        {status}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            </ListItem>\r\n            \r\n        </List>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteItem;\r\n","D:\\Study Folder\\Projects\\React\\project\\src\\components\\Table\\TableList.jsx",["34"],"D:\\Study Folder\\Projects\\React\\project\\src\\components\\MainComponent\\index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":85,"column":8,"nodeType":"41","endLine":85,"endColumn":10,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":101,"column":8,"nodeType":"41","endLine":101,"endColumn":16,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":20},{"ruleId":"39","severity":1,"message":"49","line":30,"column":8,"nodeType":"41","endLine":30,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has a missing dependency: 'suggestions.length'. Either include it or remove the dependency array.",["54"],"no-unused-vars","'ListItemText' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [handleClickOutside]",{"range":"62","text":"63"},"Update the dependencies array to be: [cursor, suggestions.length]",{"range":"64","text":"65"},"Update the dependencies array to be: [title]",{"range":"66","text":"67"},[2910,2912],"[handleClickOutside]",[3398,3406],"[cursor, suggestions.length]",[905,907],"[title]"]